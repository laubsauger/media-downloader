#!/usr/bin/env python3
"""
Convert browser DevTools cookie export to Netscape format for yt-dlp
"""

import sys
from pathlib import Path
import time

def convert_cookies(input_file, output_file):
    """Convert DevTools cookie format to Netscape format"""
    
    with open(input_file, 'r') as f:
        lines = f.readlines()
    
    with open(output_file, 'w') as f:
        # Write Netscape header
        f.write("# Netscape HTTP Cookie File\n")
        f.write("# This file was generated by convert_cookies.py\n\n")
        
        for line in lines:
            parts = line.strip().split('\t')
            if len(parts) < 6:
                continue
                
            name = parts[0]
            value = parts[1]
            domain = parts[2]
            path = parts[3]
            expires = parts[4]
            
            # Convert expiry time
            if expires == "Session":
                expiry_time = "0"
            else:
                # Parse ISO date and convert to Unix timestamp
                try:
                    from datetime import datetime
                    dt = datetime.fromisoformat(expires.replace('Z', '+00:00'))
                    expiry_time = str(int(dt.timestamp()))
                except:
                    expiry_time = "0"  # Session cookie
            
            # Check for secure flag (HTTPS only)
            secure = "TRUE" if len(parts) > 6 and parts[6] == "✓" else "FALSE"
            
            # Write in Netscape format:
            # domain flag path secure expiry name value
            f.write(f"{domain}\tTRUE\t{path}\t{secure}\t{expiry_time}\t{name}\t{value}\n")
    
    print(f"Converted cookies saved to {output_file}")
    print(f"\nFound important cookies:")
    
    # Check for important cookies
    important_cookies = ['sessionid', 'csrftoken', 'ds_user_id']
    found_cookies = []
    
    with open(output_file, 'r') as f:
        content = f.read()
        for cookie in important_cookies:
            if cookie in content:
                found_cookies.append(cookie)
                print(f"  ✓ {cookie}")
    
    if 'sessionid' in found_cookies:
        print("\n✅ Cookie file is ready to use!")
        print(f"\nUsage: ./media-downloader.py -v --cookies {output_file} [INSTAGRAM_URL]")
    else:
        print("\n⚠️  Warning: sessionid cookie not found. This is required for authentication.")

if __name__ == "__main__":
    input_file = Path("instagram_cookies.txt")
    output_file = Path("instagram_cookies_netscape.txt")
    
    if not input_file.exists():
        print("Error: instagram_cookies.txt not found")
        print("Copy your cookies from DevTools and save them to instagram_cookies.txt")
        sys.exit(1)
    
    convert_cookies(input_file, output_file)